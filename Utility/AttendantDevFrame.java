package Utility;

import javax.swing.*;

import SelfCheckOut_Software.attendant.AttendantStationInterface;
import SelfCheckOut_Software.attendant.AttendantStationOperations;

public class AttendantDevFrame extends JFrame {
	private static final long serialVersionUID = -7463443766590460983L;
	private final AttendantStationOperations aso;
	private final AttendantStationInterface asi;

	/**
	 * Creates new form AttendantDevPanel
	 */
	public AttendantDevFrame(AttendantStationOperations o, AttendantStationInterface i) {
		this.aso = o;
		this.asi = i;

		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		addPaperButton = new JButton();
		addInkButton = new JButton();
		emptyCoinsButton = new JButton();
		emptyBanknotesButton = new JButton();
		refillCoinsButton = new JButton();
		refillBanknotesButton = new JButton();
		enterMaintenanceButton = new JButton();
		startUpButton = new JButton();
		exitMaintenanceButton = new JButton();
		shutDownButton = new JButton();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		addPaperButton.setText("add paper");
		addPaperButton.addActionListener(evt -> addPaperButtonActionPerformed(evt));

		addInkButton.setText("add ink");
		addInkButton.addActionListener(evt -> addInkButtonActionPerformed(evt));

		emptyCoinsButton.setText("empty coins");
		emptyCoinsButton.addActionListener(evt -> emptyCoinsButtonActionPerformed(evt));

		emptyBanknotesButton.setText("empty banknotes");
		emptyBanknotesButton.addActionListener(evt -> emptyBanknotesButtonActionPerformed(evt));

		refillCoinsButton.setText("refill coins");
		refillCoinsButton.addActionListener(evt -> refillCoinsButtonActionPerformed(evt));

		refillBanknotesButton.setText("refill banknotes");
		refillBanknotesButton.addActionListener(evt -> refillBanknotesButtonActionPerformed(evt));

		enterMaintenanceButton.setText("enter maintenance");
		enterMaintenanceButton.addActionListener(evt -> enterMaintenanceButtonActionPerformed(evt));

		startUpButton.setText("start up");
		startUpButton.addActionListener(evt -> startUpButtonActionPerformed(evt));

		exitMaintenanceButton.setText("exit maintenance");
		exitMaintenanceButton.addActionListener(evt -> exitMaintenanceButtonActionPerformed(evt));

		shutDownButton.setText("shut down");
		shutDownButton.addActionListener(evt -> shutDownButtonActionPerformed(evt));

		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setAutoCreateGaps(true);
		layout.setAutoCreateContainerGaps(true);
		layout.setHorizontalGroup(
				layout.createParallelGroup()
						.addGroup(layout.createSequentialGroup()
										.addComponent(addPaperButton)
										.addComponent(addInkButton))
						.addGroup(layout.createSequentialGroup()
										.addComponent(emptyCoinsButton)
										.addComponent(emptyBanknotesButton))
						.addGroup(layout.createSequentialGroup()
										.addComponent(refillCoinsButton)
										.addComponent(refillBanknotesButton))
						.addGroup(layout.createSequentialGroup()
										.addComponent(enterMaintenanceButton)
										.addComponent(exitMaintenanceButton))
						.addGroup(layout.createSequentialGroup()
										.addComponent(startUpButton)
										.addComponent(shutDownButton))
		);
		layout.setVerticalGroup(
				layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup()
										.addComponent(addPaperButton)
										.addComponent(addInkButton))
						.addGroup(layout.createParallelGroup()
										.addComponent(emptyCoinsButton)
										.addComponent(emptyBanknotesButton))
						.addGroup(layout.createParallelGroup()
										.addComponent(refillCoinsButton)
										.addComponent(refillBanknotesButton))
						.addGroup(layout.createParallelGroup()
										.addComponent(enterMaintenanceButton)
										.addComponent(exitMaintenanceButton))
						.addGroup(layout.createParallelGroup()
										.addComponent(startUpButton)
										.addComponent(shutDownButton))
		);

		pack();
	}// </editor-fold>

	private void addPaperButtonActionPerformed(java.awt.event.ActionEvent evt) {
		aso.addPaper(0);
	}

	private void addInkButtonActionPerformed(java.awt.event.ActionEvent evt) {
		aso.addInk(0);
	}

	private void emptyCoinsButtonActionPerformed(java.awt.event.ActionEvent evt) {
		aso.emptyCoins(0);
	}

	private void emptyBanknotesButtonActionPerformed(java.awt.event.ActionEvent evt) {
		aso.emptyBanknotes(0);
	}

	private void refillCoinsButtonActionPerformed(java.awt.event.ActionEvent evt) {
		aso.refillCoins(0);
	}

	private void refillBanknotesButtonActionPerformed(java.awt.event.ActionEvent evt) {
		aso.refillBanknotes(0);
	}

	private void enterMaintenanceButtonActionPerformed(java.awt.event.ActionEvent evt) {
		asi.enterMaintenance(0);
	}

	private void exitMaintenanceButtonActionPerformed(java.awt.event.ActionEvent evt) {
		asi.exitMaintenance(0);
	}

	private void startUpButtonActionPerformed(java.awt.event.ActionEvent evt) {
		asi.startUp(0);
	}

	private void shutDownButtonActionPerformed(java.awt.event.ActionEvent evt) {
		asi.shutDown(0);
	}

	// Variables declaration - do not modify
	private JButton addPaperButton;
	private JButton shutDownButton;
	private JButton addInkButton;
	private JButton emptyCoinsButton;
	private JButton emptyBanknotesButton;
	private JButton refillCoinsButton;
	private JButton refillBanknotesButton;
	private JButton enterMaintenanceButton;
	private JButton startUpButton;
	private JButton exitMaintenanceButton;
	// End of variables declaration
}
